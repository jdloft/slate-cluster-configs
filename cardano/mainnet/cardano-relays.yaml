apiVersion: v1
kind: Service
metadata:
  name: cardano-relay
  namespace: cardano
  labels:
    app: cardano-relay
spec:
  ports:
  - name: node
    port: 3001
    targetPort: node
  - name: prometheus
    port: 12798
    targetPort: prometheus
  selector:
    app: cardano-relay

---
apiVersion: v1
kind: Service
metadata:
  name: cardano-relay-public
  namespace: cardano
  labels:
    app: cardano-relay
spec:
  ports:
  - name: node
    port: 3001
    targetPort: node
  selector:
    app: cardano-relay
  type: LoadBalancer

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cardano-relay
  namespace: cardano
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cardano-relay
  serviceName: cardano-relay
  template:
    metadata:
      labels:
        app: cardano-relay
    spec:
      initContainers:
        - name: init-db
          image: gcr.io/cardano-slate/cardano-node:1.20.0
          command:
          - sh
          - "-c"
          - |
            echo "Creating db directory"
            mkdir -p /db/db
          volumeMounts:
          - name: db
            mountPath: "/db"
        - name: init-genesis
          image: alpine
          command:
          - sh
          - "-c"
          - |
            [ -e /genesis/mainnet-byron-genesis.json ] || wget -P /genesis https://hydra.iohk.io/job/Cardano/cardano-node/cardano-deployment/latest-finished/download/1/mainnet-byron-genesis.json
            [ -e /genesis/mainnet-shelley-genesis.json ] || wget -P /genesis https://hydra.iohk.io/job/Cardano/cardano-node/cardano-deployment/latest-finished/download/1/mainnet-shelley-genesis.json
          volumeMounts:
            - name: genesis
              mountPath: "/genesis"
      containers:
      - name: node
        image: gcr.io/cardano-slate/cardano-node:1.20.0
        resources:
          requests:
            memory: "1Gi"
            cpu: "0.5"
          limits:
            memory: "3Gi"
            cpu: "1.5"
        # livenessProbe:
        #   exec:
        #     command:
        #     - cardano-cli
        #     - shelley
        #     - query
        #     - tip
        #     - --mainnet
        #   initialDelaySeconds: 240
        #   periodSeconds: 5
        command: ["cardano-node"]
        args: [
          "run",
          "--topology=/config/topology.json",
          "--database-path=/db/db",
          "--socket-path=/socket/node.socket",
          "--host-addr=0.0.0.0",
          "--port=3001",
          "--config=/config/config.json"
        ]
        env:
        - name: CARDANO_NODE_SOCKET_PATH
          value: "/socket/node.socket"
        volumeMounts:
        - name: config
          mountPath: "/config"
        - name: db
          mountPath: "/db"
        - name: genesis
          mountPath: "/genesis"
        - name: socket
          mountPath: "/socket"
        ports:
        - name: node
          containerPort: 3001
        - name: prometheus
          containerPort: 12798
      # - name: topology
      #   image: gcr.io/cardano-slate/cardano-topology:3
      #   resources:
      #     requests:
      #       memory: "200Mi"
      #       cpu: "100m"
      #     limits:
      #       memory: "500Mi"
      #       cpu: "500m"
      #   env:
      #   - name: CARDANO_NODE_SOCKET_PATH
      #     value: "/socket/node.socket"
      #   volumeMounts:
      #   - name: config
      #     mountPath: "/config"
      #   - name: genesis
      #     mountPath: "/genesis"
      #   - name: socket
      #     mountPath: "/socket"
      #   - name: topology-logs
      #     mountPath: "/logs"
      volumes:
      - name: config
        configMap:
          name: cardano-config
          items:
          - key: "config.json"
            path: "config.json"
          - key: "topology-relays.json"
            path: "topology.json"
      - name: socket
        emptyDir: {}
      - name: topology-logs
        emptyDir: {}
      # imagePullSecrets:
      #   - name: regcred
  volumeClaimTemplates:
  - metadata:
      name: db
      namespace: cardano
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 24Gi
  - metadata:
      name: genesis
      namespace: cardano
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Mi
